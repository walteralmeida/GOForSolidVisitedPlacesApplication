////////////////////////////////////////////////////////////////////////////////////////////
// This is Generated Code
// You should not modify this code as it may be overwritten. Use Partial classes instead
// Generated By Generative Objects  
//////////////////////////////////////////////////////////////////////////////////////////// 
using System;
using System.IO.Compression;
using System.Net;
using System.Web;
using System.Web.Compilation;
using System.Web.SessionState;
using System.Web.UI;

namespace Solid.ServiceLayer.WebHandlers
{
    public class ConstructedViewsHandler : IHttpHandler, IReadOnlySessionState
    {
        /// <summary>
        /// You will need to configure this handler in the Web.config file of your 
        /// web and register it with IIS before being able to use it. For more information
        /// see the following link: http://go.microsoft.com/?linkid=8101007
        /// </summary>
        #region IHttpHandler Members

        public bool IsReusable
        {
            // Return false in case your Managed Handler cannot be reused for another request.
            // Usually this would be false in case you have some state information preserved per request.
            get { return true; }
        }

        public void ProcessRequest(HttpContext context)
        {
            HttpResponse response = context.Response;
            response.ContentType = "text/html";

            // Enable GZip Compression if client support it
            AddGZipCompression(context, true);

            // allow caching
            response.Cache.SetCacheability(HttpCacheability.Public);
            response.Cache.SetExpires(DateTime.Now.AddDays(7));

            // return requested file
            response.WriteFile(context.Request.MapPath(context.Request.Path));
        }

        public static void AddGZipCompression(HttpContext context, bool acceptGZip)
        {
            if (acceptGZip)
            {
                context.Response.Filter = new GZipStream(context.Response.Filter, CompressionMode.Compress);
                HttpContext.Current.Response.AppendHeader("Content-encoding", "gzip");
            }
        }

        #endregion
    }
}
 