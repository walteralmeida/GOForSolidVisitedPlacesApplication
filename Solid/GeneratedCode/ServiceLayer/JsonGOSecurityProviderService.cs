////////////////////////////////////////////////////////////////////////////////////////////
// This is Generated Code
// You should not modify this code as it may be overwritten. Use Partial classes instead
// Generated By Generative Objects  
//////////////////////////////////////////////////////////////////////////////////////////// 
using GenerativeObjects.Practices.DependencyInjection;
using System.Collections.Generic;
using Solid.BusinessLayer.Components.Server;
using Solid.Data.DataObjects;
using GenerativeObjects.Practices.LayerSupportClasses;
using Unity;


namespace Solid.ServiceLayer.Json
{
    public static class JsonGOSecurityProviderService
    {
		public static System.Boolean RegisterByEmail(System.String email, System.String password)
		{
		
			return  ApplicationSettings.Container.Resolve<IGOSecurityProvider>().RegisterByEmail(email, password);
		}
		public static System.Int32 AuthorizeNavigationTo(System.String nodeName)
		{
		
			return  ApplicationSettings.Container.Resolve<IGOSecurityProvider>().AuthorizeNavigationTo(nodeName);
		}
		public static System.Boolean ValidateRegistration(System.String token)
		{
		
			return  ApplicationSettings.Container.Resolve<IGOSecurityProvider>().ValidateRegistration(token);
		}
		public static System.Boolean LogOut(System.Boolean useCookies)
		{
		
			return  ApplicationSettings.Container.Resolve<IGOSecurityProvider>().LogOut(useCookies);
		}
		public static System.Boolean Unregister(System.String email)
		{
		
			return  ApplicationSettings.Container.Resolve<IGOSecurityProvider>().Unregister(email);
		}
		public static System.String Authenticate(System.String username, System.String password, System.Boolean useCookies)
		{
		
			return  ApplicationSettings.Container.Resolve<IGOSecurityProvider>().Authenticate(username, password, useCookies);
		}
		public static System.Boolean RegisterFull(System.String firstname, System.String lastname, System.String email, System.String password)
		{
		
			return  ApplicationSettings.Container.Resolve<IGOSecurityProvider>().RegisterFull(firstname, lastname, email, password);
		}
		public static System.Boolean ResetPassword(System.String password, System.String token)
		{
		
			return  ApplicationSettings.Container.Resolve<IGOSecurityProvider>().ResetPassword(password, token);
		}
		public static System.Boolean LostPassword(System.String email)
		{
		
			return  ApplicationSettings.Container.Resolve<IGOSecurityProvider>().LostPassword(email);
		}
		public static System.Boolean BlockUser(System.String email, System.Boolean block)
		{
		
			return  ApplicationSettings.Container.Resolve<IGOSecurityProvider>().BlockUser(email, block);
		}
		public static System.Boolean Register(System.String username, System.String email, System.String password)
		{
		
			return  ApplicationSettings.Container.Resolve<IGOSecurityProvider>().Register(username, email, password);
		}
		public static void KeepAlive()
		{
		
			 ApplicationSettings.Container.Resolve<IGOSecurityProvider>().KeepAlive();
		}
		public static System.Boolean ChangePassword(System.String userId, System.String oldPassword, System.String newPassword, System.Boolean useCookies)
		{
		
			return  ApplicationSettings.Container.Resolve<IGOSecurityProvider>().ChangePassword(userId, oldPassword, newPassword, useCookies);
		}
		public static System.Boolean ApproveUser(System.String email)
		{
		
			return  ApplicationSettings.Container.Resolve<IGOSecurityProvider>().ApproveUser(email);
		}
    }
}
 