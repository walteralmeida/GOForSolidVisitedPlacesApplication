////////////////////////////////////////////////////////////////////////////////////////////
// This is Generated Code
// You should not modify this code as it may be overwritten. Use Partial classes instead
// Generated By Generative Objects  
//////////////////////////////////////////////////////////////////////////////////////////// 
using GenerativeObjects.Practices.ORMSupportClasses;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Solid.Data.DataObjects;
using Solid.Data.DataObjects.Factories;
 

namespace Solid.Data.DataObjects.Factories
{
    public class GOUserFactory : IDataObjectFactory<GOUserDataObject> 
    {
        public object CreateDataSetContainer(GOUserDataObject entity)
        {
            return new GOUserContainer(entity);
        }

        public object CreateDataSetContainer(DataObjectCollection<GOUserDataObject> entityCollection)
        {
            return new GOUserCollectionContainer(entityCollection);
        }

        public GOUserDataObject CreateDataObject(IEnumerable<string> pks)
        {
            var pksAsArray = pks.ToArray();

            if (pksAsArray.Length != 1)
                throw new ApplicationException("CreateObject - GOUser - Wrong number of PKs");

			System.Guid id;

			try 
			{
				id = Guid.Parse(pksAsArray[0]);           
			}
			catch(Exception)
			{
                throw new ApplicationException("Wrong pk type for GOUser.Id - should be System.Guid");
			}

                         
            var result = new GOUserDataObject(id);
            return result;
        }

        public GOUserDataObject DeserializeFromContainer(string jsonstring, JsonSerializerSettings settings)
        {
            var container = JsonConvert.DeserializeObject<GOUserContainer>(jsonstring, settings);

			if(container == null)
			 return null;

			var result = container.ExtractGOUser();

			// result can legitimately be null, because e.g. the dataset may contain an instance related to the main/primary entity, but not the main/primary entity itself
			// In this case we create an 'empty' instance of the main/primary entity and attach + reconstruct the dataset
            if (result == null)
            {
                result = new GOUserDataObject(container.PrimaryKey) { IsNew = false, IsDirty = false };
                result.ObjectsDataSet = container.ObjectsDataSet;

				// Sync the dataset 
				result.ObjectsDataSet.EnsureInitialized();
				result.ObjectsDataSet.ReconstructIndexes();
            }

			result.OnDeserialized();

			return result;
		}

		public GOUserDataObject DeserializeObject(string jsonstring, JsonSerializerSettings settings)
        {	
			var result = JsonConvert.DeserializeObject<GOUserDataObject>(jsonstring, settings);

			if(result == null)
			 return null;

			result.OnDeserialized();
			return result;
		}
	}
}