////////////////////////////////////////////////////////////////////////////////////////////
// This is Generated Code
// You should not modify this code as it may be overwritten. Use Partial classes instead
// Generated By Generative Objects  
////////////////////////////////////////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using System.Linq;
using GenerativeObjects.Practices.ORMSupportClasses;
using GenerativeObjects.Practices.ORMSupportClasses.NHibernate;
using GenerativeObjects.Practices.LayerSupportClasses;
using GenerativeObjects.Practices.LayerSupportClasses.DataLayer;

namespace Solid.Data.DataObjects
{
	////////////////////////////////////////////////////////////////////////////////////////////////////////
	//
	// Bridge ORMEntity -> DataObject
	//
	////////////////////////////////////////////////////////////////////////////////////////////////////////
	[Serializable]
	public class ORMUserProfile : IORMEntity 
	{
		public virtual System.String Uri { get; set; }
 
		///
		/// All Persistent non-key fields
		///
 
		///
		/// PK-Side one-to-one relations
		///
		public virtual ORMGOUser GOUser { get; set; } 
 
		///
		/// All FK-Side Relations
		///
	
 
		///
		/// PK-Side one-to-many relations
		///
		// public virtual IList<ORMVisitedPlace> VisitedPlaceItems { get; set; } = new List<ORMVisitedPlace>();VisitedPlace is not mapped to the database 
 
		///
		/// Bridge to DataObject
		///
		public virtual IDataObject ToDataObject(IObjectsDataSet dataset)
		{
            var session = NHibernateSessionController.GetCurrentSession();
            session.Evict(this);

			var x = new UserProfileDataObject();
			
			SetProperties(x);

			x.IsDirty = x.IsNew = x.IsMarkedForDeletion = false;

			x.ObjectsDataSet = dataset;
			x.ObjectsDataSet.AddObjectIfDoesNotExist(x);

			// Deep-map prefetch relations
			if (PrefetchAssociations.HasPrefetchForEntity("UserProfile", ApplicationSettings.Resolve<IDataProviderTransaction>()?.Parameters))
			{
				SetRelations(x);
			}

			return x;
		}

		protected void SetProperties(UserProfileDataObject x)
		{
			x.SetUriValue(Uri, false, false);
		}

		protected void SetRelations(UserProfileDataObject x)
		{
			var prefetches = PrefetchAssociations.Get("UserProfile", ApplicationSettings.Resolve<IDataProviderTransaction>()?.Parameters);

			if (prefetches.Contains("GOUser") && this.GOUser != null)
			{
				var gOUser = x.ObjectsDataSet.GetObject(new GOUserDataObject((System.Guid)this.GOUser.Id) { IsNew = false });

				if (gOUser == null)
					gOUser = this.GOUser.ToDataObject(x.ObjectsDataSet) as GOUserDataObject;

				x.SetGOUserValue(gOUser);
			}

		}
		
		// For database filtering, nothing IsNew or IsDirty, but these stubs needed for ORM security predicates to compile
		public virtual bool IsNew => false;
		public virtual bool IsDirty => false;

	}
}