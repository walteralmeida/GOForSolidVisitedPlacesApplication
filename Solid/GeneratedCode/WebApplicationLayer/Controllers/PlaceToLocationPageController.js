////////////////////////////////////////////////////////////////////////////////////////////
// This is Generated Code
// You should not modify this code as it may be overwritten. Use Partial classes instead
// Generated By Generative Objects  
//////////////////////////////////////////////////////////////////////////////////////////// 

(function () {
	// 
	Solid.Web.Controllers.PlaceToLocationPageController = function(applicationController) {
		var self = this;
		this.subscriptions = [];
		// store all subscriptions in this array, to unsubscribe on release.
		
		this._objectType = "PlaceToLocationPage";

		this.applicationController = applicationController;
		this.ObjectsDataSet = applicationController.ObjectsDataSet;
		this.contextId = [this.applicationController.getNextContextId()];
		this.customController = undefined;

		// Integrate custom code if any
		if (Solid.Web.Controllers.PlaceToLocationPageControllerCustom !== undefined) {
		    this.customController = new Solid.Web.Controllers.PlaceToLocationPageControllerCustom(self);
		};

		this.pageTitle = ko.observable("PlaceToLocation Details Page");

		// Initialize View Models and Data Stores
		
			this.PlaceToLocationViewModel = new Solid.Web.ViewModels.PlaceToLocationFormViewModel(this, $("#PlaceToLocationFormControl"), null, null, this.contextId);		
	
		// Attach to view models events
		this.subscriptions.push(this.PlaceToLocationViewModel.StatusData.IsBusy.subscribe( function (newValue) { self.OnPlaceToLocationViewModelIsBusyChanged(newValue); }));
		
		this.IsInEditMode = function() {

			return  (self.PlaceToLocationViewModel.StatusData.DisplayMode && self.PlaceToLocationViewModel.StatusData.DisplayMode() == 'edit');
		};


		// Events Handlers
		this.OnPlaceToLocationViewModelIsBusyChanged = function (newValue) {
		};

		this.initialize = function() {
			if (Solid.Web.Controllers.Custom && Solid.Web.Controllers.Custom.getPageTitle) {
				self.pageTitle(Solid.Web.Controllers.Custom.getPageTitle(self));
			}

			var partsCount = location.hash.split("/").length;
			var lasttagindex = 0;
			if (partsCount == 6) {
				var hash = window.location.hash;
				var allPksValid = true;
				lasttagindex = hash.lastIndexOf('/');
				var pk2 = hash.substring(lasttagindex + 1).split(new RegExp("#", "g"))[0];
				hash = hash.substring(0, lasttagindex);
				lasttagindex = hash.lastIndexOf('/');
				var pk1 = hash.substring(lasttagindex + 1).split(new RegExp("#", "g"))[0];
				
				if(allPksValid) {
					var objectToLoad = new Solid.Web.Model.DataObjects.PlaceToLocationObject();
					objectToLoad.Data.LocationURI(pk1);	
					objectToLoad.Data.PlaceURI(pk2);	
					self.PlaceToLocationViewModel.LoadPlaceToLocation(objectToLoad);	
				}
			}
			else {
					self.PlaceToLocationViewModel.CreateNew();
			}
				
	
			// Call custom initialize if defined
			if (self.customController !== undefined && self.customController.initialize !== undefined) {
			    self.customController.initialize();
			}
		};
		this.initialize();



		this.release = function() {
			// unsubscribe
			for(var i = 0;i <  self.subscriptions.length;i++) {
				self.subscriptions[i].dispose();
			}
			self.subscriptions = [];
			self.ObjectsDataSet.cleanContext(self.contextId);
			
			self.PlaceToLocationViewModel.release();
			self.PlaceToLocationViewModel = null;
		};


		return self;
	};		
	
	if (window.ApplicationSourceHandler)
		window.ApplicationSourceHandler.onSourceLoaded("/Controllers/PlaceToLocationPageController.js");
} ());
