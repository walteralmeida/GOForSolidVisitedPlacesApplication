////////////////////////////////////////////////////////////////////////////////////////////
// This is Generated Code
// You should not modify this code as it may be overwritten. Use Partial classes instead
// Generated By Generative Objects  
//////////////////////////////////////////////////////////////////////////////////////////// 
(function () {
    // 
    Solid.Web.Membership.ResetPasswordPageViewModel = function () {
        var self = this;

        this.securityProviderProxy = new Solid.Web.Model.Components.GOSecurityProviderProxy(this.ObjectsDataSet);

        this.data = {
            email: ko.observable(null),
            password: ko.observable(null),
			token: ko.observable(null),
			resetPasswordFailed: ko.observable(false),
            errorMessage: ko.observable(null),
			loginLink: ko.observable("./Login.html"),
			registerLink: ko.observable("./Register.html"),
		};

        this.commands = {
            resetPassword: function () {
                self.resetPassword();
            },
			resetPasswordText: ko.observable(Solid.Web.Messages.resetCommand),
			resetPasswordEnabled: ko.observable(true)
        };

        this.resetPassword = function () {
             $(':input').trigger('change');
			
			var configuration = {};
            configuration.password = self.data.password();
			configuration.token = window.location.href.split("key=")[1];

            configuration.successHandler = self.onResetPasswordSucceeded;
            configuration.errorHandler = self.onResetPasswordError;
		
			self.commands.resetPasswordText(Solid.Web.Messages.resettingCommand);
			self.commands.resetPasswordEnabled("false");

            self.securityProviderProxy.ResetPassword(configuration);
        };

        this.onResetPasswordSucceeded = function (token) {
			window.location = Solid.Web.Application.BaseURL 
				+ "/Membership/HoldingPage.html?title=resetPassword&message=resetPasswordSuccess&login=true"
				;
        };

        this.onResetPasswordError = function (error) {
			self.commands.resetPasswordText(Solid.Web.Messages.resetCommand);
			self.commands.resetPasswordEnabled("true");
	        self.data.password(null);    
	        self.data.token(null);    
			self.data.resetPasswordFailed(true);
	        self.data.errorMessage(error);
        };

        // Apply bindings
        ko.applyBindings(self, $("#Main").get(0));
    };
}());