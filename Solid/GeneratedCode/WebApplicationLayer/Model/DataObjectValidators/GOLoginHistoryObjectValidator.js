////////////////////////////////////////////////////////////////////////////////////////////
// This is Generated Code
// You should not modify this code as it may be overwritten. Use Partial classes instead
// Generated By Generative Objects  
//////////////////////////////////////////////////////////////////////////////////////////// 

(function () {
	'use strict'
	/// <summary>
	/// DataObject Validator object for 'GOLoginHistory'.
	/// Contains a set of method to validate the given object
	/// </summary>	
	Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator = {};

	if(Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidatorCustom !== undefined) {
		Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.CustomValidator = new Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidatorCustom(self);
	}

	/***********************************/
    /****** VALIDATORS FOR FIELDS ******/
    /***********************************/    


	Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.validateInfo = function (dataobject) {
		var isValid = true;
      if(dataobject.Data.Info() == undefined || dataobject.Data.Info() == null || dataobject.Data.Info() === "")
		{
			dataobject.StatusData.isInfoValid(false);
			dataobject.StatusData.infoErrorMessage(Solid.Web.Messages.validationRuleRequiredMessage.replace(/%FIELDNAME%/g, "Info"));
			isValid = false;
		}
		else {
			dataobject.StatusData.isInfoValid(isValid && true);
		}
		// Max Length
		if(dataobject.Data.Info() != null && dataobject.Data.Info().length > 100)
		{
			dataobject.StatusData.isInfoValid(false);
			dataobject.StatusData.infoErrorMessage(Solid.Web.Messages.validationRuleMaxLengthMessage.replace(/%FIELDNAME%/g, "Info").replace(/%LENGTH%/g, "100"));
				isValid = false;
		}
		else {
			dataobject.StatusData.isInfoValid(isValid && true);
		}
	};

	Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.validateResult = function (dataobject) {
      if(dataobject.Data.Result() == undefined || dataobject.Data.Result() == null || dataobject.Data.Result() === "")
		{
			dataobject.StatusData.isResultValid(false);
			dataobject.StatusData.resultErrorMessage(Solid.Web.Messages.validationRuleRequiredMessage.replace(/%FIELDNAME%/g, "Result"));
		}
		else {
			dataobject.StatusData.isResultValid(true);
		}
	};

	Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.validateTimestamp = function (dataobject) {
      if(dataobject.Data.Timestamp() == undefined || dataobject.Data.Timestamp() == null || dataobject.Data.Timestamp() === "")
		{
			dataobject.StatusData.isTimestampValid(false);
			dataobject.StatusData.timestampErrorMessage(Solid.Web.Messages.validationRuleRequiredMessage.replace(/%FIELDNAME%/g, "Timestamp"));
		}
		else {
			dataobject.StatusData.isTimestampValid(true);
		}
	};

	Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.validateUser = function (dataobject) {
		var isValid = true;
      if(dataobject.Data.User() == undefined || dataobject.Data.User() == null || dataobject.Data.User() === "")
		{
			dataobject.StatusData.isUserValid(false);
			dataobject.StatusData.userErrorMessage(Solid.Web.Messages.validationRuleRequiredMessage.replace(/%FIELDNAME%/g, "User"));
			isValid = false;
		}
		else {
			dataobject.StatusData.isUserValid(isValid && true);
		}
		// Max Length
		if(dataobject.Data.User() != null && dataobject.Data.User().length > 100)
		{
			dataobject.StatusData.isUserValid(false);
			dataobject.StatusData.userErrorMessage(Solid.Web.Messages.validationRuleMaxLengthMessage.replace(/%FIELDNAME%/g, "User").replace(/%LENGTH%/g, "100"));
				isValid = false;
		}
		else {
			dataobject.StatusData.isUserValid(isValid && true);
		}
	};


	/***************************************/
    /****** VALIDATORS FOR RELATIONS ******/
    /**************************************/

 	
	/******************************/
    /****** GLOBAL VALIDATOR ******/
    /******************************/

	Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.validate = function(dataobject) {

		var doContinue = true;
		var isValid = true;
		var errorMessage = "";

		if(Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.CustomValidator && Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.CustomValidator.validate !== undefined) {
			// A Custom Validator to override / add some validations.
			doContinue = Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.CustomValidator.validate(dataobject);
		}
		if(!doContinue)
			return;

		Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.validateInfo (dataobject);
		Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.validateResult (dataobject);
		Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.validateTimestamp (dataobject);
		Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.validateUser (dataobject);
		doContinue = true;
		if(Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.CustomValidator && Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.CustomValidator.CustomValidation !== undefined){
			Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.CustomValidator.CustomValidation(dataobject);
		}


		dataobject.StatusData.errorSummary.removeAll();
	    if (dataobject.StatusData.isInfoValid() === false) {
			dataobject.StatusData.errorSummary.push(dataobject.StatusData.infoErrorMessage());
		}
	    if (dataobject.StatusData.isResultValid() === false) {
			dataobject.StatusData.errorSummary.push(dataobject.StatusData.resultErrorMessage());
		}
	    if (dataobject.StatusData.isTimestampValid() === false) {
			dataobject.StatusData.errorSummary.push(dataobject.StatusData.timestampErrorMessage());
		}
	    if (dataobject.StatusData.isUserValid() === false) {
			dataobject.StatusData.errorSummary.push(dataobject.StatusData.userErrorMessage());
		}
		
		if(dataobject.StatusData.isGOLoginHistoryEntityValid() === false) {
			dataobject.StatusData.errorSummary.push(dataobject.StatusData.gOLoginHistoryEntityErrorMessage());
		}

		if(Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.CustomValidator && Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.CustomValidator.OnAfterValidate !== undefined){
			Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.CustomValidator.OnAfterValidate();
		}	
	};

	Solid.Web.Model.DataObjects.Validation.GOLoginHistoryValidator.resetValidation = function(dataobject) {

		dataobject.StatusData.isInfoValid(true);
		dataobject.StatusData.infoErrorMessage(null);
		dataobject.StatusData.isResultValid(true);
		dataobject.StatusData.resultErrorMessage(null);
		dataobject.StatusData.isTimestampValid(true);
		dataobject.StatusData.timestampErrorMessage(null);
		dataobject.StatusData.isUserValid(true);
		dataobject.StatusData.userErrorMessage(null);
		
		dataobject.StatusData.isGOLoginHistoryEntityValid(true);
		dataobject.StatusData.gOLoginHistoryEntityErrorMessage(null);
		dataobject.StatusData.errorSummary.removeAll();
	};

	if (window.ApplicationSourceHandler)
		window.ApplicationSourceHandler.onSourceLoaded("/Model/DataObjectValidators/GOLoginHistoryObjectValidator.js");

} ());