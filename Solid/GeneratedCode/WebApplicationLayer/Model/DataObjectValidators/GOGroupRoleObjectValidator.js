////////////////////////////////////////////////////////////////////////////////////////////
// This is Generated Code
// You should not modify this code as it may be overwritten. Use Partial classes instead
// Generated By Generative Objects  
//////////////////////////////////////////////////////////////////////////////////////////// 

(function () {
	'use strict'
	/// <summary>
	/// DataObject Validator object for 'GOGroupRole'.
	/// Contains a set of method to validate the given object
	/// </summary>	
	Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator = {};

	if(Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidatorCustom !== undefined) {
		Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.CustomValidator = new Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidatorCustom(self);
	}

	/***********************************/
    /****** VALIDATORS FOR FIELDS ******/
    /***********************************/    


	Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.validateGroup = function (dataobject) {
      if(dataobject.Data.Group() == undefined || dataobject.Data.Group() == null || dataobject.Data.Group() === "")
		{
			dataobject.StatusData.isGroupValid(false);
			dataobject.StatusData.groupErrorMessage(Solid.Web.Messages.validationRuleRequiredMessage.replace(/%FIELDNAME%/g, "Group"));
		}
		else {
			dataobject.StatusData.isGroupValid(true);
		}
	};

	Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.validateRole = function (dataobject) {
      if(dataobject.Data.Role() == undefined || dataobject.Data.Role() == null || dataobject.Data.Role() === "")
		{
			dataobject.StatusData.isRoleValid(false);
			dataobject.StatusData.roleErrorMessage(Solid.Web.Messages.validationRuleRequiredMessage.replace(/%FIELDNAME%/g, "Role"));
		}
		else {
			dataobject.StatusData.isRoleValid(true);
		}
	};


	/***************************************/
    /****** VALIDATORS FOR RELATIONS ******/
    /**************************************/

	Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.validateGroup = function (dataobject) {
		var isValid = true;
		if ((dataobject.Data.GOGroupName() === undefined || dataobject.Data.GOGroupName() === null || dataobject.Data.GOGroupName() === "") && dataobject.Data._group_NewObjectId() === null) {
			dataobject.StatusData.isGroupValid(false);
			dataobject.StatusData.groupErrorMessage(Solid.Web.Messages.validationRuleRequiredMessage.replace(/%FIELDNAME%/g, "Group"));
			isValid = false;
		}
		else {
			dataobject.StatusData.isGroupValid(true);
			dataobject.StatusData.groupErrorMessage(null);
		}							
	};

	Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.validateRole = function (dataobject) {
		var isValid = true;
		if ((dataobject.Data.GORoleName() === undefined || dataobject.Data.GORoleName() === null || dataobject.Data.GORoleName() === "") && dataobject.Data._role_NewObjectId() === null) {
			dataobject.StatusData.isRoleValid(false);
			dataobject.StatusData.roleErrorMessage(Solid.Web.Messages.validationRuleRequiredMessage.replace(/%FIELDNAME%/g, "Role"));
			isValid = false;
		}
		else {
			dataobject.StatusData.isRoleValid(true);
			dataobject.StatusData.roleErrorMessage(null);
		}							
	};

 	
	/******************************/
    /****** GLOBAL VALIDATOR ******/
    /******************************/

	Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.validate = function(dataobject) {

		var doContinue = true;
		var isValid = true;
		var errorMessage = "";

		if(Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.CustomValidator && Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.CustomValidator.validate !== undefined) {
			// A Custom Validator to override / add some validations.
			doContinue = Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.CustomValidator.validate(dataobject);
		}
		if(!doContinue)
			return;

		Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.validateGroup (dataobject);
		Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.validateRole (dataobject);
		Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.validateGroup(dataobject);
		Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.validateRole(dataobject);
		doContinue = true;
		if(Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.CustomValidator && Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.CustomValidator.CustomValidation !== undefined){
			Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.CustomValidator.CustomValidation(dataobject);
		}


		dataobject.StatusData.errorSummary.removeAll();
	    if (dataobject.StatusData.isGroupValid() === false) {
			dataobject.StatusData.errorSummary.push(dataobject.StatusData.groupErrorMessage());
		}
	    if (dataobject.StatusData.isRoleValid() === false) {
			dataobject.StatusData.errorSummary.push(dataobject.StatusData.roleErrorMessage());
		}
	        
		if (dataobject.StatusData.isGroupValid() === false) {
			dataobject.StatusData.errorSummary.push(dataobject.StatusData.groupErrorMessage());
		}			
	        
		if (dataobject.StatusData.isRoleValid() === false) {
			dataobject.StatusData.errorSummary.push(dataobject.StatusData.roleErrorMessage());
		}			
		
		if(dataobject.StatusData.isGOGroupRoleEntityValid() === false) {
			dataobject.StatusData.errorSummary.push(dataobject.StatusData.gOGroupRoleEntityErrorMessage());
		}

		if(Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.CustomValidator && Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.CustomValidator.OnAfterValidate !== undefined){
			Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.CustomValidator.OnAfterValidate();
		}	
	};

	Solid.Web.Model.DataObjects.Validation.GOGroupRoleValidator.resetValidation = function(dataobject) {

		dataobject.StatusData.isGroupValid(true);
		dataobject.StatusData.groupErrorMessage(null);
		dataobject.StatusData.isRoleValid(true);
		dataobject.StatusData.roleErrorMessage(null);
		
		dataobject.StatusData.isGOGroupRoleEntityValid(true);
		dataobject.StatusData.gOGroupRoleEntityErrorMessage(null);
		dataobject.StatusData.errorSummary.removeAll();
	};

	if (window.ApplicationSourceHandler)
		window.ApplicationSourceHandler.onSourceLoaded("/Model/DataObjectValidators/GOGroupRoleObjectValidator.js");

} ());