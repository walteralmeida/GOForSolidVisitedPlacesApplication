////////////////////////////////////////////////////////////////////////////////////////////
// This is Generated Code
// You should not modify this code as it may be overwritten. Use Partial classes instead
// Generated By Generative Objects  
//////////////////////////////////////////////////////////////////////////////////////////// 
using GenerativeObjects.Practices.LayerSupportClasses.Features.Security.Common;
using GenerativeObjects.Practices.ORMSupportClasses;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Linq.Expressions;
using System.Text;
using System.Threading.Tasks;
using Solid.Feature.Security.Common;
using Solid.Data.DataObjects;

namespace Solid.Features.Security
{
    public interface IEntityAuthorizations
    {
		// Returns permission level for CRUD operations on an entity for a given user claims.
		// filter : returns the filter to apply for limited authorization, if any
		// message : returns the message to return in case of unauthorized access. Could be null for default message
		// includes : returns the required includes, if any, to be able to apply the filter, if any
		PermissionLevel CanCreate(IDataObject entity, UserClaims claims, out string message, out SecurityPredicate predicate);
        PermissionLevel CanRead(IDataObject entity, UserClaims claims, out string message, out SecurityPredicate predicate);
        PermissionLevel CanUpdate(IDataObject entity, UserClaims claims, out string message, out SecurityPredicate predicate);
        PermissionLevel CanDelete(IDataObject entity, UserClaims claims, out string message, out SecurityPredicate predicate);

		// For 'no access' messages
		string EntityDisplayName { get; }
    }
}