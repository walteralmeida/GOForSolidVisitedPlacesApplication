////////////////////////////////////////////////////////////////////////////////////////////
// This is Generated Code
// You should not modify this code as it may be overwritten. Use Partial classes instead
// Generated By Generative Objects  
//////////////////////////////////////////////////////////////////////////////////////////// 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Solid.Data.DataObjects;
using GenerativeObjects.Practices.ORMSupportClasses;


namespace Solid.BusinessLayer.Components.Server
{
    /// <summary>
	/// GOSecurityProvider Component
	///  
	/// </summary>
	public partial interface IGOSecurityProvider 
    {
		/// <summary>
        /// ApproveUser Method
		///  
		/// </summary>
		/// <param name="email"></param>
        /// <returns></returns>		
		System.Boolean ApproveUser(System.String email);
		
		/// <summary>
        /// Authenticate Method
		///  
		/// </summary>
		/// <param name="username"></param>
        /// <returns></returns>		
		/// <param name="password"></param>
        /// <returns></returns>		
		/// <param name="useCookies"></param>
        /// <returns></returns>		
		System.String Authenticate(System.String username, System.String password, System.Boolean useCookies);
		
		/// <summary>
        /// AuthorizeNavigationTo Method
		///  
		/// </summary>
		/// <param name="nodeName"></param>
        /// <returns></returns>		
		System.Int32 AuthorizeNavigationTo(System.String nodeName);
		
		/// <summary>
        /// BlockUser Method
		///  
		/// </summary>
		/// <param name="email"></param>
        /// <returns></returns>		
		/// <param name="block"></param>
        /// <returns></returns>		
		System.Boolean BlockUser(System.String email, System.Boolean block);
		
		/// <summary>
        /// ChangePassword Method
		///  
		/// </summary>
		/// <param name="userId"></param>
        /// <returns></returns>		
		/// <param name="oldPassword"></param>
        /// <returns></returns>		
		/// <param name="newPassword"></param>
        /// <returns></returns>		
		/// <param name="useCookies"></param>
        /// <returns></returns>		
		System.Boolean ChangePassword(System.String userId, System.String oldPassword, System.String newPassword, System.Boolean useCookies);
		
		/// <summary>
        /// KeepAlive Method
		/// A void operation just used to renew the token and keep alive the client's session. 
		/// </summary>
		void KeepAlive();
		
		/// <summary>
        /// LogOut Method
		///  
		/// </summary>
		/// <param name="useCookies"></param>
        /// <returns></returns>		
		System.Boolean LogOut(System.Boolean useCookies);
		
		/// <summary>
        /// LostPassword Method
		///  
		/// </summary>
		/// <param name="email"></param>
        /// <returns></returns>		
		System.Boolean LostPassword(System.String email);
		
		/// <summary>
        /// Register Method
		///  
		/// </summary>
		/// <param name="username"></param>
        /// <returns></returns>		
		/// <param name="email"></param>
        /// <returns></returns>		
		/// <param name="password"></param>
        /// <returns></returns>		
		System.Boolean Register(System.String username, System.String email, System.String password);
		
		/// <summary>
        /// RegisterByEmail Method
		///  
		/// </summary>
		/// <param name="email"></param>
        /// <returns></returns>		
		/// <param name="password"></param>
        /// <returns></returns>		
		System.Boolean RegisterByEmail(System.String email, System.String password);
		
		/// <summary>
        /// RegisterFull Method
		///  
		/// </summary>
		/// <param name="firstname"></param>
        /// <returns></returns>		
		/// <param name="lastname"></param>
        /// <returns></returns>		
		/// <param name="email"></param>
        /// <returns></returns>		
		/// <param name="password"></param>
        /// <returns></returns>		
		System.Boolean RegisterFull(System.String firstname, System.String lastname, System.String email, System.String password);
		
		/// <summary>
        /// ResetPassword Method
		///  
		/// </summary>
		/// <param name="password"></param>
        /// <returns></returns>		
		/// <param name="token"></param>
        /// <returns></returns>		
		System.Boolean ResetPassword(System.String password, System.String token);
		
		/// <summary>
        /// Unregister Method
		///  
		/// </summary>
		/// <param name="email"></param>
        /// <returns></returns>		
		System.Boolean Unregister(System.String email);
		
		/// <summary>
        /// ValidateRegistration Method
		///  
		/// </summary>
		/// <param name="token"></param>
        /// <returns></returns>		
		System.Boolean ValidateRegistration(System.String token);
		
	}

	/// <summary>
	/// IGOSecurityProvider  
	/// Custom code can get IGOSecurityProvider instances from the Unity Container
	/// But resolved instances from the container are actually surrogate (proxy) implementation which perform security checks before calling the underlying component class 'raw' implementation.
	/// But sometimes in custom code it is convenient to be able to access the raw component (to call public methods that are not published as part of the web-facing API, for example)
	/// So that's what this ComponentClass getter does i.e. 
	/// Given an IGOSecurityProvider  interface instance, IGOSecurityProvider.ComponentClass gives you the underlying GOSecurityProvider implementation class.
	/// </summary>
	public partial interface IGOSecurityProvider { GOSecurityProvider ComponentClass { get; } }

	/// <summary>
	/// GOSecurityProvider.ComponentClass
	/// See above description for IGOSecurityProvider.ComponentClass
	/// The raw implementation just returns itself. 
	/// </summary>
	public partial class GOSecurityProvider { public GOSecurityProvider ComponentClass { get { return this; } } }
}
